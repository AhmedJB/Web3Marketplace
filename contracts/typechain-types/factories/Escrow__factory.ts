/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Escrow, EscrowInterface } from "../Escrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_marketplace",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ESCROW_ALREADY_DISPUTED",
    type: "error",
  },
  {
    inputs: [],
    name: "ESCROW_FAILED_TRANSFER",
    type: "error",
  },
  {
    inputs: [],
    name: "ESCROW_HOLD_TIME",
    type: "error",
  },
  {
    inputs: [],
    name: "ESCROW_NOTBUYER",
    type: "error",
  },
  {
    inputs: [],
    name: "ESCROW_NOTOWNER",
    type: "error",
  },
  {
    inputs: [],
    name: "ESCROW_NOTSELLER",
    type: "error",
  },
  {
    inputs: [],
    name: "ESCROW_NOT_DISPUTED",
    type: "error",
  },
  {
    inputs: [],
    name: "ESCROW_NOT_FROM_MARKETPLACE",
    type: "error",
  },
  {
    inputs: [],
    name: "ESCROW_NOT_OPEN",
    type: "error",
  },
  {
    inputs: [],
    name: "ESCROW_NOT_OPEN_OR_DISPUTED",
    type: "error",
  },
  {
    inputs: [],
    name: "ESCROW_NOT_SELLER_OR_BUYER",
    type: "error",
  },
  {
    inputs: [],
    name: "ESCROW_ORDER_NOT_FOUND",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_orderId",
        type: "uint256",
      },
    ],
    name: "DisputedOrder",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_orderId",
        type: "uint256",
      },
    ],
    name: "RefundedFunds",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_orderId",
        type: "uint256",
      },
    ],
    name: "ReleasedFunds",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_productId",
        type: "uint256",
      },
    ],
    name: "createEscrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBuyerOrders",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "enum Escrow.EscrowState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct Escrow.Order[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketplaceAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_orderId",
        type: "uint256",
      },
    ],
    name: "getOrderById",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "enum Escrow.EscrowState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct Escrow.Order",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSellerOrders",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address",
            name: "buyer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "productId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "orderId",
            type: "uint256",
          },
          {
            internalType: "enum Escrow.EscrowState",
            name: "state",
            type: "uint8",
          },
        ],
        internalType: "struct Escrow.Order[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_orderId",
        type: "uint256",
      },
    ],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_orderId",
        type: "uint256",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_orderId",
        type: "uint256",
      },
    ],
    name: "startDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052600180553480156200001557600080fd5b50604051620023a6380380620023a683398181016040528101906200003b919062000121565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050505062000168565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e982620000bc565b9050919050565b620000fb81620000dc565b81146200010757600080fd5b50565b6000815190506200011b81620000f0565b92915050565b600080604083850312156200013b576200013a620000b7565b5b60006200014b858286016200010a565b92505060206200015e858286016200010a565b9150509250929050565b60805161221b6200018b6000396000818161131401526115fb015261221b6000f3fe6080604052600436106100865760003560e01c8063893d20e811610059578063893d20e814610145578063bb8fe78514610170578063c0cfa7e51461019b578063c3617650146101c4578063c819998b146101f457610086565b8063278ecde11461008b57806337bdc99b146100b457806342b50a7a146100dd578063700db7521461011a575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190611d25565b61021f565b005b3480156100c057600080fd5b506100db60048036038101906100d69190611d25565b61087a565b005b3480156100e957600080fd5b5061010460048036038101906100ff9190611d25565b610f5e565b6040516101119190611ea7565b60405180910390f35b34801561012657600080fd5b5061012f611136565b60405161013c9190611fff565b60405180910390f35b34801561015157600080fd5b5061015a6112e7565b6040516101679190612030565b60405180910390f35b34801561017c57600080fd5b50610185611310565b6040516101929190612030565b60405180910390f35b3480156101a757600080fd5b506101c260048036038101906101bd9190611d25565b611338565b005b6101de60048036038101906101d99190612077565b6115f7565b6040516101eb91906120d9565b60405180910390f35b34801561020057600080fd5b50610209611abe565b6040516102169190611fff565b60405180910390f35b806000600460008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600381111561033957610338611da2565b5b600381111561034b5761034a611da2565b5b8152505090506000600381111561036557610364611da2565b5b8160c00151600381111561037c5761037b611da2565b5b141580156103b2575060038081111561039857610397611da2565b5b8160c0015160038111156103af576103ae611da2565b5b14155b156103e9576040517f8a22693e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826000600460008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600381111561050357610502611da2565b5b600381111561051557610514611da2565b5b81525050905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614801561059e575060038081111561058457610583611da2565b5b8160c00151600381111561059b5761059a611da2565b5b14155b156105d5576040517f8ab9b32900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614158015610661575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610698576040517f76df155600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156106fe57506003808111156106e5576106e4611da2565b5b8160c0015160038111156106fc576106fb611da2565b5b145b15610735576040517f26b095e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060046000878152602001908152602001600020905060028160060160006101000a81548160ff0219169083600381111561077457610773611da2565b5b021790555060008160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1682600301546040516107c790612125565b60006040518083038185875af1925050503d8060008114610804576040519150601f19603f3d011682016040523d82523d6000602084013e610809565b606091505b5050905080610844576040517f4abcf95000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b867f6cbb2f5fc1a460905eb3b50b6c769589d8b1a201f03b7f04b1f3ce09c3aee78b60405160405180910390a250505050505050565b806000600460008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600381111561099457610993611da2565b5b60038111156109a6576109a5611da2565b5b815250509050600060038111156109c0576109bf611da2565b5b8160c0015160038111156109d7576109d6611da2565b5b14158015610a0d57506003808111156109f3576109f2611da2565b5b8160c001516003811115610a0a57610a09611da2565b5b14155b15610a44576040517f8a22693e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b826000600460008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166003811115610b5e57610b5d611da2565b5b6003811115610b7057610b6f611da2565b5b81525050905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610bf95750600380811115610bdf57610bde611da2565b5b8160c001516003811115610bf657610bf5611da2565b5b14155b15610c30576040517f8ab9b32900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1603610cb85762278d00816080015142610c7b9190612169565b1015610cb3576040517f586f49f700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e19565b3373ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1614158015610d44575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610d7b576040517f492aab8600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148015610de15750600380811115610dc857610dc7611da2565b5b8160c001516003811115610ddf57610dde611da2565b5b145b15610e18576040517f26b095e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600060046000878152602001908152602001600020905060018160060160006101000a81548160ff02191690836003811115610e5857610e57611da2565b5b021790555060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260030154604051610eab90612125565b60006040518083038185875af1925050503d8060008114610ee8576040519150601f19603f3d011682016040523d82523d6000602084013e610eed565b606091505b5050905080610f28576040517f4abcf95000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b867fd7c4eded732389526228283d2661ca619ed8096fffca8c0f0c3a6e2a7f4c449d60405160405180910390a250505050505050565b610f66611c6f565b600073ffffffffffffffffffffffffffffffffffffffff166004600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603611002576040517f56421a5700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600381111561111957611118611da2565b5b600381111561112b5761112a611da2565b5b815250509050919050565b60606000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156112da57838290600052602060002090600702016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1660038111156112b5576112b4611da2565b5b60038111156112c7576112c6611da2565b5b8152505081526020019060010190611199565b5050505090508091505090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b806000600460008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff16600381111561145257611451611da2565b5b600381111561146457611463611da2565b5b815250509050806000015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156114da5750806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15611511576040517f96b88c5100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006004600085815260200190815260200160002090506000600381111561153c5761153b611da2565b5b8160060160009054906101000a900460ff1660038111156115605761155f611da2565b5b14611597576040517ff609f42000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60038160060160006101000a81548160ff021916908360038111156115bf576115be611da2565b5b0217905550837f912a1e013de32e96d992fc6c81600eb5480705bfabb226c0b69811abf2b3abac60405160405180910390a250505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461167e576040517fab24dd7c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518060e001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013481526020014281526020016001548152602001600060038111156116f1576116f0611da2565b5b8152509050600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908360038111156118405761183f611da2565b5b02179055505050600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff0219169083600381111561199157611990611da2565b5b021790555050508060046000600154815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690836003811115611a8f57611a8e611da2565b5b021790555090505060016000815480929190611aaa9061219d565b91905055508060a001519150509392505050565b60606000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611c6257838290600052602060002090600702016040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff166003811115611c3d57611c3c611da2565b5b6003811115611c4f57611c4e611da2565b5b8152505081526020019060010190611b21565b5050505090508091505090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000815260200160006003811115611ce457611ce3611da2565b5b81525090565b600080fd5b6000819050919050565b611d0281611cef565b8114611d0d57600080fd5b50565b600081359050611d1f81611cf9565b92915050565b600060208284031215611d3b57611d3a611cea565b5b6000611d4984828501611d10565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d7d82611d52565b9050919050565b611d8d81611d72565b82525050565b611d9c81611cef565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611de257611de1611da2565b5b50565b6000819050611df382611dd1565b919050565b6000611e0382611de5565b9050919050565b611e1381611df8565b82525050565b60e082016000820151611e2f6000850182611d84565b506020820151611e426020850182611d84565b506040820151611e556040850182611d93565b506060820151611e686060850182611d93565b506080820151611e7b6080850182611d93565b5060a0820151611e8e60a0850182611d93565b5060c0820151611ea160c0850182611e0a565b50505050565b600060e082019050611ebc6000830184611e19565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60e082016000820151611f046000850182611d84565b506020820151611f176020850182611d84565b506040820151611f2a6040850182611d93565b506060820151611f3d6060850182611d93565b506080820151611f506080850182611d93565b5060a0820151611f6360a0850182611d93565b5060c0820151611f7660c0850182611e0a565b50505050565b6000611f888383611eee565b60e08301905092915050565b6000602082019050919050565b6000611fac82611ec2565b611fb68185611ecd565b9350611fc183611ede565b8060005b83811015611ff2578151611fd98882611f7c565b9750611fe483611f94565b925050600181019050611fc5565b5085935050505092915050565b600060208201905081810360008301526120198184611fa1565b905092915050565b61202a81611d72565b82525050565b60006020820190506120456000830184612021565b92915050565b61205481611d72565b811461205f57600080fd5b50565b6000813590506120718161204b565b92915050565b6000806000606084860312156120905761208f611cea565b5b600061209e86828701612062565b93505060206120af86828701612062565b92505060406120c086828701611d10565b9150509250925092565b6120d381611cef565b82525050565b60006020820190506120ee60008301846120ca565b92915050565b600081905092915050565b50565b600061210f6000836120f4565b915061211a826120ff565b600082019050919050565b600061213082612102565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061217482611cef565b915061217f83611cef565b92508282039050818111156121975761219661213a565b5b92915050565b60006121a882611cef565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121da576121d961213a565b5b60018201905091905056fea2646970667358221220f726c2a1613ead16c0bd7c3476cbb021fc23d6f4615351d72b94f2309636a33d64736f6c63430008130033";

type EscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Escrow__factory extends ContractFactory {
  constructor(...args: EscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _marketplace: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_marketplace, _owner, overrides || {});
  }
  override deploy(
    _marketplace: AddressLike,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_marketplace, _owner, overrides || {}) as Promise<
      Escrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Escrow__factory {
    return super.connect(runner) as Escrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowInterface {
    return new Interface(_abi) as EscrowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Escrow {
    return new Contract(address, _abi, runner) as unknown as Escrow;
  }
}
